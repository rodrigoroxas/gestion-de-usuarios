version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: laravel_app
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
    networks:
      - app-network
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=${APP_KEY}
      - JWT_SECRET=m3TE4RkABPFsPZ1Vi7u5teV6vIe6WFfDlnxLVSuMc4TI8IgJaLKI8NEBG8o8WOC9
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    expose:
      - 9000:9000

  frontend:
    image: node:20-alpine
    container_name: vue_frontend
    volumes:
        - "./frontend:/app"
    ports:
        - "8080:5173"
    command: sh -c "cd /app && npm install && npm run dev"
    networks: 
        - app-network
    depends_on: 
        - backend

  web:
    image: nginx:alpine
    container_name: nginx_web
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html:delegated
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

  db:
    platform: linux/x86_64
    image: mysql:5.7
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
